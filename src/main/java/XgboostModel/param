

#  参数
# 训练数据格式：把第二部电影特征并入第一部电影特征中，
同一特征id有值则把mv1 和 mv2 对应值相加写入次特征id处，交叉特征存在，且有＊ClkN处理
预测数据格式： 同一特征id有值则把mv1 和 mv2 对应值相加写入次特征id处，交叉特征为1

        param.put("eta", 0.01);
        param.put("max_depth", 4);
        param.put("eval_metric", "auc"); // auc,rmse
        param.put("silent", 0);
        param.put("objective", "reg:logistic");
        //param.put("objective", "binary:logistic");
        param.put("lambda", 5);
        param.put("gamma", 0.1); //
        param.put("colsample_bytree", 0.7); //0.8
        param.put("min_child_weight", 1);
        //param.put("max_delta_step", 1.0);
        param.put("subsample", 0.7);
        //param.put("scale_pos_weight", 1);
        param.put("seed", 10);

＃训练数据格式： mv1 ＋交叉特征（＊ClkN）＋ mv2特征，
＃预测数据格式： mv1 + 交叉特征（重叠特征id处特征值相加）＋ mv2特征
        param.put("eta", 0.03);
        param.put("max_depth", 4);
        param.put("eval_metric", "auc"); // auc,rmse
        param.put("silent", 0);
        param.put("objective", "reg:logistic");
        //param.put("objective", "binary:logistic");
        param.put("lambda", 10);
        //param.put("alpha", 5);
        param.put("gamma", 0.2); //
        param.put("colsample_bytree", 0.7); //0.8
        //param.put("min_child_weight", 3);
        //param.put("max_delta_step", 1.0);
        param.put("subsample", 0.7);
        //param.put("scale_pos_weight", 2);
        //param.put("seed", 10);

